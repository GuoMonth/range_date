name: Rust CI & Release

on:
  push:
    branches: [ main ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: [stable, beta, nightly]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.rust }}
          override: true
          components: rustfmt, clippy
      
      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
      
      - name: Clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D clippy::expect_used -D clippy::panic -D clippy::unwrap_used -D warnings
      
      - name: Build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --all --verbose
      
      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --all --verbose

      - name: Install tarpaulin
        if: matrix.rust == 'stable'
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-tarpaulin
      
      - name: Generate coverage report
        if: matrix.rust == 'stable'
        uses: actions-rs/cargo@v1
        with:
          command: tarpaulin
          args: --all-features --workspace --timeout 120 --out Xml --output-dir ./coverage
      
      - name: Upload coverage to Codecov
        if: matrix.rust == 'stable'
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage/cobertura.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }} # Set in the repository secrets

  release:
    name: Release to crates.io
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      
      - name: Publish to crates.io
        uses: actions-rs/cargo@v1
        with:
          command: publish
          args: --verbose
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
